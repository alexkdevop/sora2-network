initSidebarItems({"constant":[["MAX_PEERS",""],["MIN_PEERS",""]],"enum":[["AssetKind","A type of asset registered on a bridge."],["ChangePeersContract",""],["CurrencyIdEncoded","Thischain or Sidechain asset id."],["IncomingMetaRequestKind","Types of meta-requests that can be made."],["IncomingRequest","Incoming (Sidechain->Thischain) request."],["IncomingRequestKind","Types of requests that can be made from a sidechain."],["IncomingTransactionRequestKind","Types of transaction-requests that can be made from a sidechain."],["LoadIncomingRequest",""],["OffchainRequest","A bridge operation handled by off-chain workers."],["OutgoingRequest","Outgoing (Thischain->Sidechain) request."],["OutgoingRequestEncoded","Ethereum-encoded `OutgoingRequest`. Contains a payload for signing by peers. Also, can be used by client apps for more convenient contract function calls."],["RequestStatus","Status of a registered request."]],"fn":[["encode_outgoing_request_eth_call","Encodes the given outgoing request as it should look when it gets called on Sidechain."],["parse_hash_from_call","Parses a `tx_hash` argument of a contract call. `tx_hash` is usually a hash of a Thischain’s outgoing request (`OutgoingRequest`)."],["signature_params_to_tokens","Converts signature params to Sidechain-compatible tokens."]],"struct":[["Encoder",""],["EthPeersSync","A helper structure used to add or remove peer on Ethereum network."],["IncomingAddToken","Incoming request for adding Sidechain token to a bridge."],["IncomingCancelOutgoingRequest","Incoming request for cancelling a obsolete outgoing request. “Obsolete” means that the request signatures were collected, but something changed in the bridge state (e.g., peers set) and the signatures became invalid. In this case we want to cancel the request to be able to re-submit it later."],["IncomingChangePeers","Incoming request for adding/removing peer in a bridge."],["IncomingChangePeersCompat",""],["IncomingMarkAsDoneRequest","Incoming request that’s used to mark outgoing requests as done. Since off-chain workers query Sidechain networks lazily, we should force them to check if some outgoing request was finalized on Sidechain."],["IncomingMigrate","Incoming request that acts as an acknowledgement to a corresponding `OutgoingMigrate` request."],["IncomingPrepareForMigration","Incoming request that acts as an acknowledgement to a corresponding `OutgoingPrepareForMigration` request."],["IncomingTransfer","Incoming request for transferring token from Sidechain to Thischain."],["LoadIncomingMetaRequest","Information needed for a request to be loaded from sidechain. Basically it’s a hash of the transaction and the type of the request."],["LoadIncomingTransactionRequest","Information needed for a request to be loaded from sidechain. Basically it’s a hash of the transaction and the type of the request."],["OutgoingAddAsset","Outgoing request for adding a Thischain asset."],["OutgoingAddAssetEncoded","Sidechain-compatible version of `OutgoingAddAsset`."],["OutgoingAddPeer","Outgoing request for adding a peer."],["OutgoingAddPeerCompat","Old contracts-compatible `add peer` request. Will be removed in the future."],["OutgoingAddPeerEncoded","Sidechain-compatible version of `OutgoingAddPeer`."],["OutgoingAddToken","Outgoing request for adding a Sidechain token."],["OutgoingAddTokenEncoded","Sidechain-compatible version of `OutgoingAddToken`."],["OutgoingMigrate","Outgoing request for migrating the bridge. For the full migration process description see `OutgoingPrepareForMigration` request."],["OutgoingMigrateEncoded","Sidechain-compatible version of `OutgoingMigrate`."],["OutgoingPrepareForMigration","Outgoing request for preparing bridge for migration."],["OutgoingPrepareForMigrationEncoded","Sidechain-compatible version of `OutgoingPrepareForMigration`."],["OutgoingRemovePeer","Outgoing request for removing a peer."],["OutgoingRemovePeerCompat","Old contracts-compatible `add peer` request. Will be removed in the future."],["OutgoingRemovePeerEncoded","Sidechain-compatible version of `OutgoingRemovePeer`."],["OutgoingTransfer","Outgoing request for transferring the given asset from Thischain to Sidechain."],["OutgoingTransferEncoded","Sidechain-compatible version of `OutgoingTransfer`."]]});