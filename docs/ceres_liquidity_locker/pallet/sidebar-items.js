initSidebarItems({"enum":[["Call","Contains one variant per dispatchable that can be called by an extrinsic."],["Error","Custom dispatch errors of this pallet."],["Event","The event emitted by this pallet."]],"fn":[["__type_value_for_default_for_authority_account",""],["__type_value_for_default_for_fees_option_one_account",""],["__type_value_for_default_for_fees_option_two_account",""],["__type_value_for_default_for_option_two_ceres_amount",""],["__type_value_for_default_for_pallet_storage_version",""]],"struct":[["DefaultForAuthorityAccount",""],["DefaultForFeesOptionOneAccount",""],["DefaultForFeesOptionTwoAccount",""],["DefaultForOptionTwoCeresAmount",""],["DefaultForPalletStorageVersion",""],["Pallet","The pallet implementing the on-chain logic."]],"trait":[["Config","Configuration trait of this pallet."]],"type":[["AccountIdOf",""],["AssetIdOf",""],["AuthorityAccount","Account which has permissions for changing CERES amount fee"],["FeesOptionOneAccount","Account for collecting fees from Option 1"],["FeesOptionTwoAccount","Account for collecting fees from Option 2"],["FeesOptionTwoCeresAmount","Amount of CERES for locker fees option two"],["LockerData","Contains data about lockups for each account"],["Module","Type alias to `Pallet`, to be used by `construct_runtime`."],["PalletStorageVersion","Pallet storage version"],["Timestamp",""]]});