initSidebarItems({"enum":[["MasterCalls",""],["MasterEvents",""]],"static":[["MASTER_ABI",""]],"struct":[["AddPeerByPeerCall","Container type for all input parameters for the `addPeerByPeer` function with signature `addPeerByPeer(address,bytes32,uint8[],bytes32[],bytes32[])` and selector `[202, 112, 207, 110]`"],["AddTokenCall","Container type for all input parameters for the `addToken` function with signature `addToken(address)` and selector `[212, 139, 252, 167]`"],["CheckTokenAddressCall","Container type for all input parameters for the `checkTokenAddress` function with signature `checkTokenAddress(address)` and selector `[159, 26, 21, 108]`"],["EnableContractFilter",""],["InitializeCall","Container type for all input parameters for the `initialize` function with signature `initialize(address,address[],string,string,uint8,address,uint256,uint256,bytes32)` and selector `[92, 109, 11, 140]`"],["IsOwnerCall","Container type for all input parameters for the `isOwner` function with signature `isOwner()` and selector `[143, 50, 213, 155]`"],["IsPeerCall","Container type for all input parameters for the `isPeer` function with signature `isPeer(address)` and selector `[62, 68, 207, 120]`"],["IsTokenCall","Container type for all input parameters for the `isToken` function with signature `isToken(address)` and selector `[25, 243, 115, 97]`"],["Master",""],["MintTokensByPeersCall","Container type for all input parameters for the `mintTokensByPeers` function with signature `mintTokensByPeers(address,uint256,address,bytes32,uint8[],bytes32[],bytes32[],address)` and selector `[120, 116, 150, 32]`"],["OwnerCall","Container type for all input parameters for the `owner_` function with signature `owner_()` and selector `[231, 102, 48, 121]`"],["PeersCountCall","Container type for all input parameters for the `peersCount` function with signature `peersCount()` and selector `[174, 102, 100, 224]`"],["ProofCall","Container type for all input parameters for the `proof` function with signature `proof()` and selector `[250, 249, 36, 207]`"],["ProofRewardCall","Container type for all input parameters for the `proofReward` function with signature `proofReward()` and selector `[146, 215, 82, 153]`"],["RecieveCall","Container type for all input parameters for the `recieve` function with signature `recieve()` and selector `[169, 225, 11, 242]`"],["RemovePeerByPeerCall","Container type for all input parameters for the `removePeerByPeer` function with signature `removePeerByPeer(address,bytes32,uint8[],bytes32[],bytes32[])` and selector `[137, 195, 155, 175]`"],["SubmitProofCall","Container type for all input parameters for the `submitProof` function with signature `submitProof(bytes32,uint8[],bytes32[],bytes32[])` and selector `[116, 232, 8, 175]`"],["TokenInstanceCall","Container type for all input parameters for the `tokenInstance` function with signature `tokenInstance()` and selector `[101, 128, 48, 179]`"],["UniqueAddressesCall","Container type for all input parameters for the `uniqueAddresses` function with signature `uniqueAddresses(address)` and selector `[29, 52, 94, 187]`"],["UsedCall","Container type for all input parameters for the `used` function with signature `used(bytes32)` and selector `[176, 124, 65, 31]`"],["WithdrawCall","Container type for all input parameters for the `withdraw` function with signature `withdraw(address,uint256,address,bytes32,uint8[],bytes32[],bytes32[],address)` and selector `[238, 162, 158, 62]`"],["WithdrawalFilter",""]]});