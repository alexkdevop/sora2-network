initSidebarItems({"enum":[["BridgeCalls",""],["BridgeEvents",""]],"static":[["BRIDGE_ABI",""]],"struct":[["AcceptedEthTokensCall","Container type for all input parameters for the `acceptedEthTokens` function with signature `acceptedEthTokens(address)` and selector `[104, 122, 130, 219]`"],["AddEthNativeTokenCall","Container type for all input parameters for the `addEthNativeToken` function with signature `addEthNativeToken(address,string,string,uint8,bytes32,uint8[],bytes32[],bytes32[])` and selector `[223, 217, 219, 137]`"],["AddNewSidechainTokenCall","Container type for all input parameters for the `addNewSidechainToken` function with signature `addNewSidechainToken(string,string,uint8,bytes32,bytes32,uint8[],bytes32[],bytes32[])` and selector `[35, 173, 125, 226]`"],["AddPeerByPeerCall","Container type for all input parameters for the `addPeerByPeer` function with signature `addPeerByPeer(address,bytes32,uint8[],bytes32[],bytes32[])` and selector `[202, 112, 207, 110]`"],["AddressVALCall","Container type for all input parameters for the `_addressVAL` function with signature `_addressVAL()` and selector `[59, 105, 130, 136]`"],["AddressXORCall","Container type for all input parameters for the `_addressXOR` function with signature `_addressXOR()` and selector `[194, 155, 179, 50]`"],["Bridge",""],["ChangePeersFilter",""],["DepositFilter",""],["IsPeerCall","Container type for all input parameters for the `isPeer` function with signature `isPeer(address)` and selector `[62, 68, 207, 120]`"],["MigratedFilter",""],["NetworkIdCall","Container type for all input parameters for the `_networkId` function with signature `_networkId()` and selector `[95, 222, 135, 197]`"],["PeersCountCall","Container type for all input parameters for the `peersCount` function with signature `peersCount()` and selector `[174, 102, 100, 224]`"],["PrepareForMigrationCall","Container type for all input parameters for the `prepareForMigration` function with signature `prepareForMigration(address,bytes32,uint8[],bytes32[],bytes32[])` and selector `[158, 227, 250, 229]`"],["PreparedForMigrationFilter",""],["ReceiveByEthereumAssetAddressCall","Container type for all input parameters for the `receiveByEthereumAssetAddress` function with signature `receiveByEthereumAssetAddress(address,uint256,address,address,bytes32,uint8[],bytes32[],bytes32[])` and selector `[19, 95, 20, 226]`"],["ReceiveBySidechainAssetIdCall","Container type for all input parameters for the `receiveBySidechainAssetId` function with signature `receiveBySidechainAssetId(bytes32,uint256,address,address,bytes32,uint8[],bytes32[],bytes32[])` and selector `[117, 39, 62, 206]`"],["ReceivePaymentCall","Container type for all input parameters for the `receivePayment` function with signature `receivePayment()` and selector `[131, 92, 25, 243]`"],["RemovePeerByPeerCall","Container type for all input parameters for the `removePeerByPeer` function with signature `removePeerByPeer(address,bytes32,uint8[],bytes32[],bytes32[])` and selector `[137, 195, 155, 175]`"],["SendERC20ToSidechainCall","Container type for all input parameters for the `sendERC20ToSidechain` function with signature `sendERC20ToSidechain(bytes32,uint256,address)` and selector `[3, 239, 157, 31]`"],["SendEthToSidechainCall","Container type for all input parameters for the `sendEthToSidechain` function with signature `sendEthToSidechain(bytes32)` and selector `[253, 251, 162, 93]`"],["ShutDownAndMigrateCall","Container type for all input parameters for the `shutDownAndMigrate` function with signature `shutDownAndMigrate(address,bytes32,address,address[],uint8[],bytes32[],bytes32[])` and selector `[19, 64, 100, 19]`"],["SidechainTokenAddressArrayCall","Container type for all input parameters for the `_sidechainTokenAddressArray` function with signature `_sidechainTokenAddressArray(uint256)` and selector `[22, 40, 49, 52]`"],["SidechainTokensByAddressCall","Container type for all input parameters for the `_sidechainTokensByAddress` function with signature `_sidechainTokensByAddress(address)` and selector `[205, 85, 9, 71]`"],["SidechainTokensCall","Container type for all input parameters for the `_sidechainTokens` function with signature `_sidechainTokens(bytes32)` and selector `[133, 5, 232, 104]`"],["UniqueAddressesCall","Container type for all input parameters for the `_uniqueAddresses` function with signature `_uniqueAddresses(address)` and selector `[18, 198, 250, 27]`"],["UsedCall","Container type for all input parameters for the `used` function with signature `used(bytes32)` and selector `[176, 124, 65, 31]`"],["WithdrawalFilter",""]]});